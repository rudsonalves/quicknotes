version: '3.9'

services:
  db:
    image: postgres:alpine
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "pg_isready -d ${POSTGRES_USER} -U ${POSTGRES_USER}"
        ]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 5s
    networks:
      - quicknotes
    ports:
      - ${QNS_DB_PORT}:${QNS_DB_PORT}
    env_file:
      - .env

  migrate:
    image: migrate/migrate
    networks:
      - quicknotes
    volumes:
      - ./db/migrations:/migrations
    command:
      [
        "-path",
        "/migrations/",
        "-database",
        "postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:${QNS_DB_PORT}/${QNS_DB_NAME}?sslmode=disable",
        "up"
      ]
    depends_on:
      db:
        condition: service_healthy
    env_file:
      - .env

  server:
    build:
      context: ./
      dockerfile: dockerfile
    networks:
      - quicknotes
    ports:
      - ${QNS_SERVER_PORT}:${QNS_SERVER_PORT}
    depends_on: [ migrate ]
    env_file:
      - .env

  caddy:
    image: caddy:alpine
    networks:
      - quicknotes
    ports:
      - "443:443"
      - "443:443/udp"
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile
    depends_on: [ server ]

networks:
  quicknotes:


volumes:
  caddy_data:
  caddy_config:
