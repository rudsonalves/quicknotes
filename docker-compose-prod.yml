version: '3.9'

services:
  db:
    image: postgres:12.19-alpine
    environment:
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_USER: ${DB_USER}
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -d ${DB_USER} -U ${DB_USER}" ]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 5s
    networks:
      - quicknotes
    ports:
      - 5432:5432

  migrate:
    image: migrate/migrate
    networks:
      - quicknotes
    volumes:
      - ./db/migrations:/migrations
    command:
      [
        "-path",
        "/migrations/",
        "-database",
        "postgres://${DB_USER}:${DB_PASSWORD}@db:5432/${DB_NAME}?sslmode=disable",
        "up"
      ]
    environment:
      DB_PASSWORD: ${DB_PASSWORD}
      DB_USER: ${DB_USER}
      DB_NAME: ${DB_NAME}
    depends_on:
      db:
        condition: service_healthy

  server:
    build:
      context: ./
      dockerfile: dockerfile
    networks:
      - quicknotes
    ports:
      - 5000:5000
    depends_on: [ migrate ]
    environment:
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_NAME: ${DB_NAME}
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}
      SMTP_HOST: ${SMTP_HOST}
      SMTP_PORT: ${SMTP_PORT}

networks:
  quicknotes:
